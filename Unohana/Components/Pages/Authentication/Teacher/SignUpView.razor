@page "/teacher/signup"
@inject UserStorage UserStorage
@inject NavigationManager NavigationManager
@inject Teacher Teacher

@code {
    string SignUpErrorMessage = string.Empty;

    private SignUpDto? Model { get; set; }
    private EditContext? editContext { get; set; }
    private ValidationMessageStore? validationMessageStore;

    protected override void OnInitialized()
    {
        if (UserStorage.EmployeeId == 0)
            NavigationManager.NavigateTo("/teacher/verify");
        // success
        Model ??= new();
        editContext = new(Model);
        validationMessageStore = new(editContext);
    }

    private async Task Submit()
    {
        try
        {
            bool result = await Teacher.SignUp(
                UserStorage.EmployeeId,
                UserStorage.Username,
                UserStorage.Email,
                Model!.Password
            );
            if (result is false)
            {
                SignUpErrorMessage = "something went wrong!";
                return;
            }
            // success
            NavigationManager.NavigateTo("/teacher/signin");
        }
        catch(Exception ex){ Debug.WriteLine("TeacherSignUp error: "+ ex); }
    }
}

<title>
    Sign up
</title>

<PrimaryLayout>
    <Content>
        <PrimaryCard>
            <Content>
                <span class="primary-title">
                    Sign up
                </span>
                <EditForm OnValidSubmit="@Submit" EditContext="@editContext" FormName="Teacher_SignUp">
                <DataAnnotationsValidator />
                <div class="grid-container">
                    <!--rows 1-->
                    <div class="rows">
                    <div class="form-group">
                        <span class="label">
                            password
                        </span>
                        <InputText type="password" @bind-Value="@Model!.Password" />
                        <ValidationMessage For="@(()=> Model.Password)" />
                    </div>
                    <div class="form-group">
                        <span class="label">
                            check password
                        </span>
                        <InputText type="password" @bind-Value="@Model!.CheckPassword"/>
                        <ValidationMessage For="@(()=> Model.CheckPassword)" />
                    </div>
                    </div>
                    <!--rows 2-->
                    <div class="rows">
                    <div class="form-group">
                        <span class="label">
                            profile photo
                        </span>
                        <InputFile />
                    </div>
                    </div>
                </div>
                <PrimaryButton Title="continue" />
                <span class="label">@SignUpErrorMessage</span>
                </EditForm>
            </Content>
        </PrimaryCard>
    </Content>
</PrimaryLayout>
